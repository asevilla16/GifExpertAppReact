{"version":3,"sources":["components/AddCategory.js","helpers/GetGifs.js","hooks/useFetchGifs.js","components/GifGridItem.js","components/GifGrid.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","prev","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","dbGifs","map","gif","id","title","images","downsized_medium","useFetchGifs","loading","state","setState","useEffect","then","imgs","GifGridItem","img","className","src","alt","GifGrid","GifExpertApp","categories","cat","ReactDOM","render","document","getElementById"],"mappings":"mMAgCeA,EA7BK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAElB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAYA,OACI,sBAAMC,SAPW,SAACC,GAClBA,EAAEC,iBACFN,GAAc,SAAAO,GAAI,OAAKL,GAAL,mBAAoBK,OACtCJ,EAAc,KAId,SACI,uBACIK,KAAK,OACLC,MAAOP,EACPQ,SAfc,SAACL,GACvBF,EAAcE,EAAEM,OAAOF,a,uBCRlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,4DACJ,mCACD,GAERC,EAJa,iDAImCC,UAAUH,GAJ7C,kBAEL,GAFK,oBACJ,oCADI,SAMAI,MAAMF,GANN,cAMbG,EANa,gBAOIA,EAAKC,OAPT,uBAOXC,EAPW,EAOXA,KAEFC,EAASD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAC3B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAbvB,kBAgBZM,GAhBY,4CAAH,sDCsBLO,EAnBM,SAACf,GAClB,MAA0BZ,mBAAS,CAC/BmB,KAAM,GACNS,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAeA,OAVAC,qBAAU,WACNpB,EAAQC,GACHoB,MAAK,SAAAC,GACFH,EAAS,CACLX,KAAMc,EACNL,SAAS,SAGtB,CAAChB,IAEGiB,GCRIK,EATK,SAAC,GAAW,IAAVC,EAAS,EAATA,IAClB,OACI,sBAAKC,UAAU,yCAAf,UACI,qBAAKC,IAAKF,EAAIrB,IAAKwB,IAAKH,EAAIX,QAC5B,4BAAIW,EAAIX,YCmBLe,EArBC,SAAC,GAAgB,IAAf3B,EAAc,EAAdA,SAEd,EAAwBe,EAAaf,GAA9BO,EAAP,EAAOA,KAAMS,EAAb,EAAaA,QAEb,OACI,qCACI,6BAAKhB,IACL,sBAAKwB,UAAU,YAAf,UACKR,GAAW,mBAAGQ,UAAU,mCAAb,sBACXjB,EAAKE,KAAI,SAAAC,GAAG,OACT,cAAC,EAAD,CAEIa,IAAKb,GADAA,EAAIC,cCYlBiB,EAvBM,WAEjB,MAAoCxC,mBAAS,CAAC,kBAA9C,mBAAOyC,EAAP,KAAmB1C,EAAnB,KAEA,OACI,qCACI,gDACA,cAAC,EAAD,CACIA,cAAeA,IAEnB,uBACA,6BAEQ0C,EAAWpB,KAAI,SAAAqB,GAEX,OAAO,cAAC,EAAD,CAAmB9B,SAAU8B,GAAfA,Y,MCb7CC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.2a11e67c.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setCategories(prev => [inputValue, ...prev]);\r\n        setInputValue('');\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory;\r\n","export const getGifs = async (category) => {\r\n    const apiKey = 'br8rnQwaZPHBBDkdGQFKmTYyXQib6UGd';\r\n    const limit = 10;\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=${limit}&api_key=${apiKey}`;\r\n\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const dbGifs = data.map(gif => {\r\n        return {\r\n            id: gif.id,\r\n            title: gif.title,\r\n            url: gif.images?.downsized_medium.url\r\n        }\r\n    });\r\n    return dbGifs;\r\n}","import { useEffect, useState } from 'react'\r\nimport { getGifs } from '../helpers/GetGifs';\r\n\r\nconst useFetchGifs = (category) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs(category)\r\n            .then(imgs => {\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n            })\r\n    }, [category]);\r\n\r\n    return state;\r\n}\r\n\r\nexport default useFetchGifs;\r\n","import React from 'react'\r\n\r\nconst GifGridItem = ({img}) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={img.url} alt={img.title} />\r\n            <p>{img.title}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GifGridItem;\r\n","import React from 'react'\r\nimport useFetchGifs from '../hooks/useFetchGifs';\r\nimport GifGridItem from './GifGridItem';\r\n\r\nconst GifGrid = ({category}) => {\r\n\r\n    const {data, loading} = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n            <div className=\"card-grid\">\r\n                {loading && <p className=\"animate__animated animate__flash\">Cargando</p>}\r\n                {data.map(gif => (\r\n                    <GifGridItem \r\n                        key={gif.id}\r\n                        img={gif}\r\n                    />\r\n                )\r\n                )}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifGrid\r\n","import React, { useState } from 'react'\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n    \r\n    const [categories, setCategories] = useState(['One Punch Man']);\r\n\r\n    return (\r\n        <>\r\n            <h2>Gif Expert App</h2>\r\n            <AddCategory \r\n                setCategories={setCategories}\r\n            />\r\n            <hr/>\r\n            <ol>\r\n                {\r\n                    categories.map(cat => {\r\n                        // return <li key={cat}>{cat}</li>\r\n                        return <GifGrid key={cat} category={cat} />\r\n                    })\r\n                }\r\n            </ol>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default GifExpertApp;\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}